#
# Helpful script to run example
#

#export GOROOT=/usr/local/go
#export PATH=$PATH:$GOROOT/bin
#export GO111MODULE=off
export GOPATH=$HOME
export CERTIFIER_PROTOTYPE=~/src/github.com/jlmucb/crypto/v2/certifier-framework-for-confidential-computing
export EXAMPLE_DIR=$CERTIFIER_PROTOTYPE/sample_apps/certifier_in_tee

# Compile utilities
cd $CERTIFIER_PROTOTYPE/utilities
make -f cert_utility.mak
make -f policy_utilities.mak

# Create keys
mkdir -p $EXAMPLE_DIR/provisioning
cd $EXAMPLE_DIR/provisioning

$CERTIFIER_PROTOTYPE/utilities/cert_utility.exe --operation=generate-policy-key-and-test-keys \
    --policy_key_output_file=policy_key_file.bin --policy_cert_output_file=policy_cert_file.bin \
    --platform_key_output_file=platform_key_file.bin --attest_key_output_file=attest_key_file.bin

# build policy for key service
cd $EXAMPLE_DIR/provisioning

#policyKey says platformKey is-trused-for-attestation
$CERTIFIER_PROTOTYPE/utilities/make_unary_vse_clause.exe --key_subject=platform_key_file.bin \
  --verb="is-trusted-for-attestation" --output=ts1.bin
$CERTIFIER_PROTOTYPE/utilities/make_indirect_vse_clause.exe --key_subject=policy_key_file.bin \
  --verb="says" --clause=ts1.bin --output=vse_policy1.bin
$CERTIFIER_PROTOTYPE/utilities/make_signed_claim_from_vse_clause.exe --vse_file=vse_policy1.bin \
  --duration=9000 --private_key_file=policy_key_file.bin --output=signed_claim_1.bin

# policy key says measurement is-trusted
$CERTIFIER_PROTOTYPE/utilities/measurement_utility.exe --input=$CERTIFIER_PROTOTYPE/certifier_service/simpleserver --output=certifier_measurement_file.bin

$CERTIFIER_PROTOTYPE/utilities/measurement_utility.exe --type=hash --input=../example_app.exe \
      --output=example_app.measurement
$CERTIFIER_PROTOTYPE/utilities/make_unary_vse_clause.exe --key_subject="" \
  --measurement_subject=certifier_measurement_file.bin --verb="is-trusted" \
  --output=ts2.bin
$CERTIFIER_PROTOTYPE/utilities/make_indirect_vse_clause.exe --key_subject=policy_key_file.bin \
  --verb="says" --clause=ts2.bin --output=vse_policy2.bin
$CERTIFIER_PROTOTYPE/utilities/make_signed_claim_from_vse_clause.exe \
  --vse_file=vse_policy2.bin --duration=9000 \
  --private_key_file=policy_key_file.bin --output=signed_claim_2.bin

#key_policy
$CERTIFIER_PROTOTYPE/utilities/package_claims.exe --input=signed_claim_1.bin,signed_claim_2.bin\
  --output=key_policy.bin

#certifier_policy
$CERTIFIER_PROTOTYPE/utilities/package_claims.exe --input=signed_claim_1.bin,signed_claim_2.bin\
  --output=certifier_policy.bin

$CERTIFIER_PROTOTYPE/utilities/print_packaged_claims.exe --input=key_policy.bin
$CERTIFIER_PROTOTYPE/utilities/print_packaged_claims.exe --input=certifier_policy.bin

# This gets included from the app
cd $EXAMPLE_DIR/provisioning
$CERTIFIER_PROTOTYPE/utilities/make_unary_vse_clause.exe --key_subject=attest_key_file.bin \
  --verb="is-trusted-for-attestation" --output=tsc1.bin
$CERTIFIER_PROTOTYPE/utilities/make_indirect_vse_clause.exe --key_subject=platform_key_file.bin \
  --verb="says" --clause=tsc1.bin --output=vse_policy3.bin
$CERTIFIER_PROTOTYPE/utilities/make_signed_claim_from_vse_clause.exe --vse_file=vse_policy3.bin \
  --duration=9000 --private_key_file=platform_key_file.bin \
  --output=platform_attest_endorsement.bin
$CERTIFIER_PROTOTYPE/utilities/print_signed_claim.exe --input=platform_attest_endorsement.bin

# provision service and apps
cd $EXAMPLE_DIR
mkdir -p key_service certifier_service

# provision service and apps
cd $EXAMPLE_DIR/provisioning

cp ./* $EXAMPLE_DIR/key_service
cp ./* $EXAMPLE_DIR/certifier_service

#compile the server
cd $CERTIFIER_PROTOTYPE/certifier_service/graminelib
make dummy
cd $CERTIFIER_PROTOTYPE/certifier_service/oelib
make dummy
cd $CERTIFIER_PROTOTYPE/certifier_service/isletlib
make dummy
cd $CERTIFIER_PROTOTYPE/certifier_service/teelib
make
cd $CERTIFIER_PROTOTYPE/certifier_service
go build simpleserver.go

#test convert
cd $EXAMPLE_DIR/certifier_service
$CERTIFIER_PROTOTYPE/certifier_service/simpleserver \
      --operation=convert-key

# Now see if the certifier_service can provision from the store
$CERTIFIER_PROTOTYPE/certifier_service/simpleserver \
      --operation=certifier-service --get_key_from_secure_store=true \
      --policyFile=certifier_policy.bin --readPolicy=true

#run server as key service
cd $EXAMPLE_DIR/key_service
$CERTIFIER_PROTOTYPE/certifier_service/simpleserver \
	--operation=key-service \
	--policyFile=key_policy.bin --readPolicy=true

#run server as certifier service and provision
cd $EXAMPLE_DIR/certifier_service
$CERTIFIER_PROTOTYPE/certifier_service/simpleserver \
      --operation=provision-keys

#run certifier service, see if it starts right
cd $EXAMPLE_DIR/certifier_service
$CERTIFIER_PROTOTYPE/certifier_service/simpleserver \
	--operation=certifier-service --get_key_from_secure_store=true \
	--policyFile=certifier_policy.bin --readPolicy=true

